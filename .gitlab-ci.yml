stages:
  - analysis
  - build
  - version
  - package
  - deploy
  - release

pylint:
  stage: analysis
  image: python:3.7
  script:
    - python -m pip install --upgrade pip
    - pip install -r requirements.txt
    - if [ -n "$DEPLOY_TOKEN" ]; then pip install -U mulgyeol-oauthlib --index-url https://${DEPLOY_USER}:${DEPLOY_TOKEN}@gitlab.com/api/v4/projects/20530638/packages/pypi/simple --extra-index-url https://pypi.org/simple; fi
    - pylint src -d R,C,W --init-hook="import sys, os; sys.path.extend(['./src/bot', './src/msu'])" -r y -f colorized
  only:
    refs:
      - merge_requests
      - master
    changes:
      - src/bot/**/*
      - src/msu/**/*
  interruptible: true

.shared_windows_runners:
  tags:
    - shared-windows
    - windows
    - windows-1809

.build-console:
  extends:
    - .shared_windows_runners
  stage: build
  script:
    - cd src\console
    - nuget restore console.sln
    - dir C:\Windows\Microsoft.NET\Framework
    - '& "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin\MSBuild.exe" console.sln /p:Configuration=Release /p:AllowedReferenceRelatedFileExtensions=none /p:DebugType=None'
    - cd ..\..
    - mkdir build
    - mv src\console\bin\Release\* build
    - rm -Force build\*.pdb

.build-bot:
  extends:
    - .shared_windows_runners
  stage: build
  script:
    - echo "$Env:CI_PROJECT_DIR"
    - Invoke-WebRequest -Uri https://www.python.org/ftp/python/3.7.7/python-3.7.7-amd64.exe -OutFile python-3.7.7-amd64.exe
    - dir
    - Start-Process -FilePath "python-3.7.7-amd64.exe" -ArgumentList "/quiet Include_test=0 Shortcuts=0" -Wait
    - dir $Env:LOCALAPPDATA\Programs\Python
    - $Env:Path += ";$Env:LOCALAPPDATA\Programs\Python\Python37\"
    - $Env:Path += ";$Env:LOCALAPPDATA\Programs\Python\Python37\Scripts\"
    - $Env:botpackage = "$Env:LOCALAPPDATA\Programs\Python\Python37\Lib\site-packages"
    - python -m pip install --upgrade pip
    - python -V
    - pip install -r requirements.txt
    - if (Test-Path Env:DEPLOY_TOKEN) { pip install -U mulgyeol-oauthlib --index-url https://${Env:DEPLOY_USER}:${Env:DEPLOY_TOKEN}@gitlab.com/api/v4/projects/20530638/packages/pypi/simple --extra-index-url https://pypi.org/simple }
    - mkdir build
    - cd src\bot
    - pyinstaller app.spec
    - mv dist\app $Env:CI_PROJECT_DIR\build

.build-msu:
  extends:
    - .shared_windows_runners
  stage: build
  script:
    - echo "$Env:CI_PROJECT_DIR"
    - Invoke-WebRequest -Uri https://www.python.org/ftp/python/3.7.7/python-3.7.7-amd64.exe -OutFile python-3.7.7-amd64.exe
    - dir
    - Start-Process -FilePath "python-3.7.7-amd64.exe" -ArgumentList "/quiet Include_test=0 Shortcuts=0" -Wait
    - dir $Env:LOCALAPPDATA\Programs\Python
    - $Env:Path += ";$Env:LOCALAPPDATA\Programs\Python\Python37\"
    - $Env:Path += ";$Env:LOCALAPPDATA\Programs\Python\Python37\Scripts\"
    - python -m pip install --upgrade pip
    - python -V
    - pip install -r requirements.txt
    - mkdir build
    - cd src\msu
    - pyinstaller --icon=$Env:CI_PROJECT_DIR\package\mkbot_install.ico "Mulgyeol Software Update.py"
    - mv "dist\Mulgyeol Software Update" $Env:CI_PROJECT_DIR\build\app

build-console:
  extends:
    - .build-console
  artifacts:
    expire_in: 1h
    paths:
      - build\
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
    - if: $CI_COMMIT_TAG

test-build-console:
  extends:
    - .build-console
  only:
    refs:
      - merge_requests
    changes:
      - src/console/**/*
  interruptible: true

build-bot:
  extends:
    - .build-bot
  artifacts:
    expire_in: 1h
    paths:
      - build\
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
    - if: $CI_COMMIT_TAG

test-build-bot:
  extends:
    - .build-bot
  after_script:
    - mv package\data build
    - mkdir $Env:USERPROFILE\.mkbot
    - mv extensions $Env:USERPROFILE\.mkbot
    - cd .\build\app
    - .\app.exe --dry-run
    - python .\package\tool.py -e $LASTEXITCODE
  only:
    refs:
      - merge_requests
    changes:
      - src/bot/**/*
    variables:
      - $DEPLOY_TOKEN
  interruptible: true

build-msu:
  extends:
    - .build-msu
  artifacts:
    expire_in: 1h
    paths:
      - build\
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
    - if: $CI_COMMIT_TAG

test-build-msu:
  extends:
    - .build-msu
  only:
    refs:
      - merge_requests
    changes:
      - src/msu/**/*
  interruptible: true

version-beta:
  image: python:latest
  stage: version
  script:
    - pip install requests
    - mkdir output
    - curl --output output/last_version.txt -L "https://gitlab.com/mgylabs/mulgyeol-mkbot/-/jobs/artifacts/master/raw/output/last_version.txt?job=version-beta"
    - python package/vc.py -b
    - python package/tool.py -b
  artifacts:
    paths:
      - output/
      - package/info/
  only:
    - master

version-stable:
  image: python:latest
  stage: version
  script:
    - pip install requests
    - python package/vc.py -r
    - python package/tool.py -r
  needs:
    - job: build-bot
      artifacts: false
    - job: build-msu
      artifacts: false
    - job: build-console
      artifacts: false
    - project: mgylabs/mulgyeol-mkbot
      job: version-beta
      ref: master
      artifacts: true
  artifacts:
    expire_in: 3h
    paths:
      - .public/
      - output/
      - package/info/
  only:
    - tags

.release:
  extends:
    - .shared_windows_runners
  stage: package
  before_script:
    - $ver=cat output/last_version.txt
  script:
    - choco install -y nsis --version=3.05
    - $Env:Path += ";C:\Program Files (x86)\NSIS\"
    - makensis.exe /INPUTCHARSET UTF8 /DPRODUCT_VERSION=$ver package\MKBot.nsi
    - mv package\MKBotSetup.exe .\

test-pre-release:
  extends:
    - .release
  before_script:
    - $ver="test-version"
  only:
    refs:
      - merge_requests
    changes:
      - package/*.nsi
  interruptible: true

pre-release:
  extends:
    - .release
  artifacts:
    name: "MKBot-beta"
    expire_in: 1 week
    paths:
      - .\MKBotSetup.exe
  only:
    - master

stable-release:
  extends:
    - .release
  artifacts:
    name: "MKBot"
    expire_in: 2 yrs
    paths:
      - .\MKBotSetup.exe
  only:
    - tags

pages:
  image: python:latest
  stage: deploy
  script:
    - echo "pages"
    - mv .public/version.json public
    - python package/hash.py
  needs:
    - job: version-stable
      artifacts: true
    - job: stable-release
      artifacts: true
  artifacts:
    paths:
      - public
  only:
    - tags
