name: Nightly Build

on:
  # schedule:
  #   - cron: "0 15 * * *"
  workflow_dispatch:
    inputs:
      manual:
        description: "Manual Build"
        required: true
        default: "true"

jobs:
  check:
    runs-on: ubuntu-latest
    name: Check Latest Commit
    if: github.repository == 'mgylabs/mulgyeol-mkbot'
    outputs:
      is_new: ${{ steps.checkcommit.outputs.is_new }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: Check Commit
        id: checkcommit
        run: |
          python package/ghtool.py -check
  canary-release:
    name: Nightly Build
    needs: check
    if: needs.check.outputs.is_new == 'true' || github.event.inputs.manual == 'true'
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: webfactory/ssh-agent@v0.5.1
        name: Install SSH key
        id: install-ssh
        continue-on-error: true
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      - name: Install dependencies 1
        env:
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt ; if ($LASTEXITCODE) { exit $LASTEXITCODE }
          if ($Env:DEPLOY_TOKEN) { pip install -U mulgyeol-oauthlib --index-url https://${Env:DEPLOY_USER}:${Env:DEPLOY_TOKEN}@gitlab.com/api/v4/projects/20530638/packages/pypi/simple --extra-index-url https://pypi.org/simple }
        shell: pwsh
      - name: Install dependencies 2
        if: steps.install-ssh.outcome == 'success'
        run: |
          pip install git+ssh://git@github.com/MycroftKang/application-insights-python.git
        shell: pwsh
      - name: Version
        env:
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          python package/vc.py -gn ; if ($LASTEXITCODE) { exit $LASTEXITCODE }
          echo "mkbot_version=$(cat version.txt)" >> $env:GITHUB_ENV
          if ($Env:API_KEY) { echo $Env:API_KEY > src\lib\mgylabs\constants\APIKey.py }
        shell: pwsh
      - name: Build MK Bot
        run: |
          call scripts\build.bat
      - name: Packaging
        run: |
          $Env:Path += ";C:\Program Files (x86)\NSIS\"
          makensis.exe /INPUTCHARSET UTF8 "/DPRODUCT_VERSION=${Env:mkbot_version}" "/DPRODUCT_NAME=Mulgyeol MK Bot" "/DPRODUCT_EXE=MKBot.exe" "/DEXT_DIR=.mkbot" package\MKBot.nsi
        shell: pwsh
      - name: Compress Setup
        run: |
          Compress-Archive -Path MKBotSetup.exe -DestinationPath MKBotSetup.zip
        shell: pwsh
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python package/ghtool.py -uca
