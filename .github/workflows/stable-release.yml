name: Stable Release

on:
  push:
    tags:
      - 'v*'

jobs:
  stable-release:
    name: Stable Release
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      env:
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        if (Test-Path Env:DEPLOY_TOKEN) { pip install -U mulgyeol-oauthlib --index-url https://${Env:DEPLOY_USER}:${Env:DEPLOY_TOKEN}@gitlab.com/api/v4/projects/20530638/packages/pypi/simple --extra-index-url https://pypi.org/simple }
      shell: pwsh
    - name: Version
      run: |
        python package/vc.py -gr
        echo "mkbot_version=$(cat version.txt)" >> $env:GITHUB_ENV
      shell: pwsh
    - name: Build MK Bot
      run: |
        call scripts\build.bat
    - name: Packaging
      run: |
        $Env:Path += ";C:\Program Files (x86)\NSIS\"
        makensis.exe /INPUTCHARSET UTF8 /DPRODUCT_VERSION=${Env:mkbot_version} package\MKBot.nsi
        mv package\MKBotSetup.exe .\
        Compress-Archive -Path MKBotSetup.exe -DestinationPath MKBotSetup.zip
      shell: pwsh
    - name: Update CHANGELOG
      env:
        TAG_NAME: ${{ github.ref }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        rm -Force changelogs\unreleased\*.yml
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add CHANGELOG.md
        git add changelogs\unreleased
        git commit -m "Update CHANGELOG.md for $(${Env:TAG_NAME}.Substring(10))"
        git push -u https://${Env:GITHUB_ACTOR}:${Env:GITHUB_TOKEN}@github.com/${Env:GITHUB_REPOSITORY}.git HEAD:refs/heads/update-changelog-for-$(${Env:TAG_NAME}.Substring(10)) --force
        python package/ghtool.py -cp
      shell: pwsh
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Mulgyeol MK Bot ${{ github.ref }}
        body_path: temp_changelog.md
        draft: true
        prerelease: false
    - name: Upload Release Asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAG_NAME: ${{ github.ref }}
        UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
      run: |
        python package/ghtool.py -ua
