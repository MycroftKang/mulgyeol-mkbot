name: Stable Release

on:
  push:
    tags:
      - "v*"

jobs:
  stable-release:
    name: Stable Release
    if: github.repository == 'mgylabs/mulgyeol-mkbot'
    runs-on: windows-2019
    environment:
      name: "Stable"
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: webfactory/ssh-agent@v0.5.1
        name: Install SSH key
        id: install-ssh
        continue-on-error: true
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      - name: Install dependencies 1
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt ; if ($LASTEXITCODE) { exit $LASTEXITCODE }
        shell: pwsh
      - name: Install dependencies 2
        if: steps.install-ssh.outcome == 'success'
        run: |
          pip install git+ssh://git@github.com/MycroftKang/application-insights-python.git
        shell: pwsh
      - name: Version
        env:
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          python package/vc.py -gr ; if ($LASTEXITCODE) { exit $LASTEXITCODE }
          echo "mkbot_version=$(cat version.txt)" >> $env:GITHUB_ENV
          if ($Env:API_KEY) { echo $Env:API_KEY > src\lib\mgylabs\constants\APIKey.py }
        shell: pwsh
      - name: Build MK Bot
        run: |
          call scripts\build.bat --stable
      - name: Packaging
        run: |
          $Env:Path += ";C:\Program Files (x86)\NSIS\"
          makensis.exe /INPUTCHARSET UTF8 "/DPRODUCT_VERSION=${Env:mkbot_version}" "/DPRODUCT_NAME=Mulgyeol MK Bot" "/DPRODUCT_EXE=MKBot.exe" "/DDNAME=mkbot" "/DBUILD_TYPE=stable" "/DEXT_DIR=.mkbot" package\MKBot.nsi
        shell: pwsh
      - name: Compress Setup
        run: |
          Compress-Archive -Path MKBotSetup.exe -DestinationPath MKBotSetup.zip
        shell: pwsh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Mulgyeol MK Bot ${{ github.ref }}
          body_path: temp_changelog.md
          draft: true
          prerelease: false
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.ref }}
          UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
        run: |
          python package/ghtool.py -ua
      - name: Update CHANGELOG
        env:
          TAG_NAME: ${{ github.ref }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_REF: ${{ github.event.base_ref }}
        run: |
          rm -Force changelogs\unreleased\*.yml
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          git add changelogs\unreleased
          git commit -m "Update CHANGELOG.md for $(${Env:TAG_NAME}.Substring(10))"
          git push -u https://${Env:GITHUB_ACTOR}:${Env:GITHUB_TOKEN}@github.com/${Env:GITHUB_REPOSITORY}.git HEAD:refs/heads/update-changelog-for-$(${Env:TAG_NAME}.Substring(10)) --force
          python package/ghtool.py -cp
        shell: pwsh
