name: Beta Release

on:
  workflow_dispatch:
    inputs:
      manual:
        description: "Manual Build"
        required: true
        type: boolean
        default: true

env:
  DEFAULT_PYTHON: "3.10"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  beta-release:
    name: Beta Release
    if: github.repository == 'mgylabs/mkbot'
    runs-on: windows-2019
    environment:
      name: "Beta"
      url: https://github.com/mgylabs/mkbot/releases/tag/beta
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: "poetry"
          cache-dependency-path: |
            **/poetry.lock
            .github/flags/release.flag
      - uses: webfactory/ssh-agent@v0.7.0
        name: Install SSH key
        id: install-ssh
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      - name: Install dependencies
        env:
          SSH_OUTCOME: ${{ steps.install-ssh.outcome }}
        run: |
          if ($Env:SSH_OUTCOME -eq "success") {
            poetry install --no-root -E release
          } else {
            poetry install --no-root
          }
      - name: Version
        env:
          API_KEY: ${{ secrets.API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run python package/vc.py --beta ; if ($LASTEXITCODE) { exit $LASTEXITCODE }
          echo "mkbot_version=$(cat version.txt)" >> $env:GITHUB_ENV
          if ($Env:API_KEY) { echo $Env:API_KEY > src\lib\mgylabs\constants\APIKey.py }
      - name: Build MK Bot
        run: |
          poetry run scripts\build.bat --stable
      - name: Packaging
        run: |
          & "${Env:programfiles(x86)}\Inno Setup 6\iscc.exe" "/DNameLong=Mulgyeol MK Bot" "/DNameShort=MK Bot" "/DVersion=${Env:mkbot_version}" "/DAppExeName=MKBot.exe" "/DAppMutex=MKBot" "/DExtDirName=.mkbot" "/DDName=mkbot" "package\MKBot.iss"
      - name: Compress Setup
        run: |
          Compress-Archive -Path MKBotSetup-${Env:mkbot_version}.exe -DestinationPath MKBotSetup.zip
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run python package/ghtool.py -ubeta
