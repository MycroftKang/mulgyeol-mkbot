name: Beta Release

on:
  workflow_dispatch:
    inputs:
      manual:
        description: "Manual Build"
        required: true
        type: boolean
        default: true

jobs:
  beta-release:
    name: Beta Release
    if: github.repository == 'mgylabs/mkbot'
    runs-on: windows-2019
    environment:
      name: "Beta"
      url: https://github.com/mgylabs/mkbot/releases/tag/beta
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - uses: webfactory/ssh-agent@v0.5.1
        name: Install SSH key
        id: install-ssh
        continue-on-error: true
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
        shell: pwsh
      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Install dependencies 1
        run: |
          python -m pip install -U pip wheel
          pip install -r requirements.txt ; if ($LASTEXITCODE) { exit $LASTEXITCODE }
        shell: pwsh
      - name: Install dependencies 2
        if: steps.install-ssh.outcome == 'success'
        run: |
          pip install --no-cache-dir git+ssh://git@github.com/MycroftKang/application-insights-python.git
        shell: pwsh
      - name: Version
        env:
          API_KEY: ${{ secrets.API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python package/vc.py --beta ; if ($LASTEXITCODE) { exit $LASTEXITCODE }
          echo "mkbot_version=$(cat version.txt)" >> $env:GITHUB_ENV
          if ($Env:API_KEY) { echo $Env:API_KEY > src\lib\mgylabs\constants\APIKey.py }
        shell: pwsh
      - name: Build MK Bot
        run: |
          call scripts\build.bat --stable
      - name: Packaging
        run: |
          & "${Env:programfiles(x86)}\Inno Setup 6\iscc.exe" "/DNameLong=Mulgyeol MK Bot" "/DNameShort=MK Bot" "/DVersion=${Env:mkbot_version}" "/DAppExeName=MKBot.exe" "/DAppMutex=MKBot" "/DExtDirName=.mkbot" "/DDName=mkbot" "package\MKBot.iss"
        shell: pwsh
      - name: Compress Setup
        run: |
          Compress-Archive -Path MKBotSetup-${Env:mkbot_version}.exe -DestinationPath MKBotSetup.zip
        shell: pwsh
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python package/ghtool.py -ubeta
